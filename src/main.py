import os
import requests
import json
import windnd
from typing import Literal
import tkinter as tk
from tkinter import Menu, filedialog, simpledialog, messagebox


## languages
def LANG(s: str) -> str:
    _LANG = {
        "Year": {"en": "Year", "zh": "年份"},
        "Current Path": {"en": "Current Path", "zh": "当前路径"},
        "AoC Helper": {"en": "AoC Helper", "zh": "AoC助手"},
        "Set Path": {"en": "Set Path", "zh": "设置路径"},
        "Set Cookies": {"en": "Set Cookies", "zh": "设置Cookies"},
        "Settings": {"en": "Settings", "zh": "设置"},
        "Create New AoC": {"en": "Create New AoC", "zh": "新建AoC"},
        "Tools": {"en": "Tools", "zh": "工具"},
        "English": {"en": "English", "zh": "英文"},
        "Chinese": {"en": "Chinese", "zh": "中文"},
        "Language": {"en": "Language", "zh": "语言"},
        "About": {"en": "About", "zh": "关于"},
        "Version": {"en": "Version", "zh": "版本"},
        "Author": {"en": "Author", "zh": "作者"},
        "Email": {"en": "Email", "zh": "邮箱"},
        "Help": {"en": "Help", "zh": "帮助"},
        "Create New Day": {"en": "Create New Day", "zh": "新建挑战"},
        "Open Newest Part 1": {"en": "Open Newest Part 1", "zh": "打开最新P1"},
        "Create Part 2": {"en": "Create Part 2", "zh": "创建P2"},
        "Open Newest Part 2": {"en": "Open Newest Part 2", "zh": "打开最新P2"},
        "Success": {"en": "Success", "zh": "成功"},
        "Error": {"en": "Error", "zh": "错误"},
        "Incorrect cookies.": {"en": "Incorrect cookies.", "zh": "Cookies错误。"},
        "No day found.": {"en": "No day found.", "zh": "未找到任何挑战。"},
        "Where to create": {"en": "Where to create", "zh": "选择创建位置"},
        "Select AoC Folder": {"en": "Select AoC Folder", "zh": "选择AoC文件夹"},
        "Enter the year of the AoC challenge:": {
            "en": "Enter the year of the AoC challenge:",
            "zh": "输入AoC挑战年份：",
        },
        "Language changed.\nEffective at next startup.": {
            "en": "Language changed.\nEffective at next startup.",
            "zh": "语言已更改。\n下次启动生效。",
        },
        "Invalid year.\nPlease try again.": {
            "en": "Invalid year.\nPlease try again.",
            "zh": "年份输入错误。\n请重试。",
        },
        "already exists.\nPlease try again.": {
            "en": "already exists.\nPlease try again.",
            "zh": "已存在。\n请重试。",
        },
        "Please set the path first.": {
            "en": "Please set the path first.",
            "zh": "请先设置路径。",
        },
        "New day created successfully!": {
            "en": "New day created successfully!",
            "zh": "新挑战已创建成功！",
        },
        "Failed to retrieve the webpage.\nPlease recheck your cookies or the puzzle is not available yet.": {
            "en": "Failed to retrieve the webpage.\nPlease recheck your cookies or the puzzle is not available yet.",
            "zh": "无法获取AoC挑战。\n请检查Cookies或挑战尚未发布。",
        },
        'No "part1.js" found in the last day.': {
            "en": 'No "part1.js" found in the last day.',
            "zh": '未找到"part1.js"文件。',
        },
        'No "part2.js" found in the last day.': {
            "en": 'No "part2.js" found in the last day.',
            "zh": '未找到"part2.js"文件。',
        },
        'Invalid folder.\nFolder name should be "aoc" with valid year followed.': {
            "en": 'Invalid folder.\nFolder name should be "aoc" with valid year followed.',
            "zh": '文件夹名称应为"aoc"加上有效的年份。',
        },
    }
    return _LANG[s][language]


## define functions
def create_new_aoc() -> None:
    folder_selected = filedialog.askdirectory(title=LANG("Where to create"))
    if not folder_selected:
        return
    while True:
        year = simpledialog.askstring(
            LANG("Year"), LANG("Enter the year of the AoC challenge:")
        )
        if year is None:
            return
        if not (len(year) == 4 and year.isdigit() and int(year) >= 2015):
            messagebox.showerror(
                LANG("Error"), LANG("Invalid year.\nPlease try again.")
            )
            continue
        folder_name = f"aoc{year}"
        path = os.path.join(folder_selected, folder_name)
        if os.path.exists(path):
            messagebox.showerror(
                LANG("Error"),
                f"{folder_name} " + LANG("already exists.\nPlease try again."),
            )
            continue
        break
    os.mkdir(path)
    with open(os.path.join(path, ".gitignore"), "w") as f:
        f.write("*\n\n!/**/\n!*.js\n!*.md\n!*.gitignore\n")
    with open(os.path.join(path, "README.md"), "w") as f:
        f.write(
            f"# AoC-{year}-js\nMy [Advent of Code](https://adventofcode.com/{year}) solutions in JavaScript."
        )
    with open("./config/path.data", "w") as f:
        f.write(path)
    load_path()


def create_new_day() -> None:
    global cur_path
    if not cur_path:
        messagebox.showerror(LANG("Error"), LANG("Please set the path first."))
        return
    with open("./config/cookies.json", "r") as f:
        try:
            cookies = json.load(f)
        except:  # noqa: E722
            cookies = {}
    if not cookies:
        messagebox.showerror(LANG("Error"), LANG("Incorrect cookies."))
        return

    next_day = len([x for x in os.listdir(cur_path) if x.startswith("day")]) + 1
    url = f"https://adventofcode.com/{cur_path[-4:]}/day/{next_day}/input"
    response = requests.get(url=url, cookies=cookies)

    if response.status_code == 200:
        folder_name = "day" + "0" * (next_day < 10) + str(next_day)
        path = os.path.join(cur_path, folder_name)
        os.mkdir(path)
        with open(os.path.join(path, "part1.js"), "w") as f:
            f.write(
                "const data = require('fs').readFileSync(require('path').join(__dirname, 0 ? 'puzzle.txt' : 'example.txt'), 'utf8')\n\n"
            )
        with open(os.path.join(path, "puzzle.txt"), "w") as f:
            f.write(response.text.strip())
        with open(os.path.join(path, "example.txt"), "w") as f:
            pass
        messagebox.showinfo(LANG("Success"), LANG("New day created successfully!"))
        os.startfile(os.path.join(path, "example.txt"))
    else:
        messagebox.showerror(
            LANG("Error"),
            LANG(
                "Failed to retrieve the webpage.\nPlease recheck your cookies or the puzzle is not available yet."
            ),
        )


def create_part2() -> None:
    global cur_path
    if not cur_path:
        messagebox.showerror(LANG("Error"), LANG("Please set the path first."))
        return
    for day in [x for x in os.listdir(cur_path) if x.startswith("day")]:
        path1 = os.path.join(cur_path, day, "part1.js")
        if not os.path.isfile(path1):
            with open(path1, "w") as f:
                f.write(
                    "const data = require('fs').readFileSync(require('path').join(__dirname, 0 ? 'puzzle.txt' : 'example.txt'), 'utf8')\n\n"
                )
        path2 = os.path.join(cur_path, day, "part2.js")
        if os.path.isfile(path2):
            continue
        with open(path1, "r") as f:
            code = f.read()
        with open(path2, "w") as f:
            f.write(code)


def open_newest(part: Literal[1, 2]) -> None:
    global cur_path
    if not cur_path:
        messagebox.showerror(LANG("Error"), LANG("Please set the path first."))
        return
    day_list = [x for x in os.listdir(cur_path) if x.startswith("day")]
    if not day_list:
        messagebox.showerror(LANG("Error"), LANG("No day found."))
        return
    path = os.path.join(cur_path, day_list[-1], f"part{part}.js")
    if not os.path.isfile(path):
        messagebox.showerror(
            LANG("Error"), LANG(f'No "part{part}.js" found in the last day.')
        )
        return
    os.startfile(path)


def set_path(folder_selected=None) -> None:
    if folder_selected is None:
        while True:
            folder_selected = filedialog.askdirectory(title=LANG("Select AoC Folder"))
            if not folder_selected:
                return
            aoc = folder_selected[-7:-4]
            year = folder_selected[-4:]
            if not (aoc == "aoc" and year.isdigit() and int(year) >= 2015):
                messagebox.showerror(
                    LANG("Error"),
                    LANG(
                        'Invalid folder.\nFolder name should be "aoc" with valid year followed.'
                    ),
                )
                continue
            with open("./config/path.data", "w") as f:
                f.write(folder_selected)
            load_path()
            break
    else:
        folder_selected = folder_selected[0].decode("utf-8")
        aoc = folder_selected[-7:-4]
        year = folder_selected[-4:]
        if not (aoc == "aoc" and year.isdigit() and int(year) >= 2015):
            messagebox.showerror(
                LANG("Error"),
                LANG(
                    'Invalid folder.\nFolder name should be "aoc" with valid year followed.'
                ),
            )
            return
        with open("./config/path.data", "w") as f:
            f.write(folder_selected)
        load_path()


def load_path() -> None:
    global cur_path
    with open("./config/path.data", "r") as f:
        cur_path = f.read()
    if not os.path.isdir(cur_path):
        cur_path = ""
        with open("./config/path.data", "w") as f:
            f.write("")
    if cur_path:
        if len(cur_path) <= 30:
            cur_path_text = cur_path
        else:
            cur_path_text = cur_path[:3] + "..." + cur_path[-25:]
    else:
        cur_path_text = "Not Set"
    cur_path_lable.config(text=f"{LANG("Current Path")}: {cur_path_text}")


def get_icon() -> Literal["./icon/aoc_icon.ico"]:
    if not os.path.isdir("./icon"):
        os.mkdir("./icon")
    if not os.path.isfile("./icon/aoc_icon.ico"):
        with open("./icon/aoc_icon.ico", "wb") as f:
            f.write(
                b"\x00\x00\x01\x00\x01\x00@@\x00\x00\x01\x00\x08\x00(\x16\x00\x00\x16\x00\x00\x00(\x00\x00\x00@\x00\x00\x00\x80\x00\x00\x00\x01\x00\x08\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x1b\x00\x00\x00\x1b\x01\x00\x00\x1f\x01\x00\x00\x1f\x03\x02\x00\x1f\x04\x02\x00 \x01\x00\x00 \x06\x03\x00\"\x07\x04\x00#\x08\x05\x00#\n\x05\x00$\x0b\x06\x00!\x0c\x0b\x00\"\x10\x06\x00#\x10\r\x00$\x12\x08\x00%\x13\n\x00!\x14\x10\x00\"\x15\x11\x00#\x15\x11\x00$\x17\x12\x00#\x1c\x14\x00$\x18\x13\x00%\x19\x14\x00'\x1a\x15\x00%\x1f\x17\x00#\x1a\x19\x00#\x1b\x1a\x00(\x1a\x15\x00' \x18\x00%#\x1f\x00(!\x19\x00'$ \x00')(\x00(%!\x00)'\"\x00*(#\x00)-%\x00(*)\x00)+*\x00*-+\x00+0'\x00(1+\x00)2,\x00*3-\x00+4.\x00,1(\x00+50\x00)85\x00*96\x00.82\x00*?>\x00,=9\x00->9\x00+@?\x001@=\x000F?\x00,A@\x00-BA\x00.DB\x00.KE\x001G@\x003GF\x002I@\x000LF\x001MG\x002NH\x004PK\x005RL\x001TP\x002UQ\x005WT\x000ZV\x001[W\x006ZV\x003]Z\x005`]\x007b_\x002ca\x003db\x003dc\x006gf\x004lg\x004kk\x008kc\x00:ji\x007pj\x009sm\x00:tn\x004up\x005vr\x00<|x\x00=}y\x00>~z\x00:\x81\x7f\x00<\x82\x80\x00=\x84\x82\x009\x88\x87\x00<\x8b\x84\x00:\x89\x88\x00<\x8a\x89\x00=\x8b\x8a\x00>\x8c\x8b\x00?\x8d\x8c\x009\x91\x8c\x00:\x92\x8d\x00?\x96\x91\x00=\x9b\x98\x00?\xa5\xa2\x00@\x8e\x8d\x00@\x97\x92\x00C\x9b\x95\x00A\xa0\x9c\x00C\xa2\x9e\x00D\xa3\x9f\x00@\xa6\xa4\x00A\xa7\xa5\x00C\xa9\xa7\x00D\xaa\xa8\x00E\xac\xa9\x00F\xad\xaa\x00B\xb0\xb0\x00E\xb3\xb3\x00G\xb7\xb0\x00F\xb4\xb4\x00A\xb9\xb3\x00B\xba\xb5\x00D\xbc\xb7\x00C\xba\xbb\x00D\xbb\xbc\x00F\xbe\xb9\x00I\xb6\xb6\x00I\xc0\xbb\x00J\xc2\xbc\x00E\xc6\xc2\x00G\xc8\xc4\x00D\xcd\xcb\x00E\xce\xcc\x00I\xc9\xc5\x00K\xcb\xc8\x00L\xcc\xc9\x00M\xcd\xca\x00E\xd8\xd7\x00G\xda\xd9\x00I\xd2\xd0\x00J\xd3\xd1\x00K\xd4\xd2\x00L\xd5\xd3\x00M\xd6\xd4\x00N\xd7\xd5\x00I\xdb\xda\x00K\xdd\xdc\x00J\xe5\xe6\x00L\xe7\xe8\x00N\xeb\xe5\x00O\xec\xe6\x00J\xef\xeb\x00M\xe8\xe9\x00K\xef\xf0\x00M\xf2\xee\x00N\xf3\xef\x00O\xf4\xf0\x00L\xfb\xf8\x00N\xfc\xf9\x00O\xfd\xfa\x00Q\xe2\xe1\x00P\xed\xe7\x00P\xeb\xeb\x00Q\xee\xe8\x00T\xee\xef\x00P\xf5\xf1\x00S\xf7\xf3\x00P\xfe\xfb\x00Q\xff\xfd\x00T\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\t;\x16\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0eA\x0f\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0fe\xacu\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03Z\xacw,\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06%\x87\xac\xad\xad]\x00\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x045\xa5\xad\xad\x96O\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x11\x9b\xad\xad\xad\xa0<\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x15\x86\xad\xad\xad\xaaP\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06G\xad\xad\xad\xad\x8f\x14\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06c\xad\xad\xad\xad{\x01\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0ek\xad\xad\xad\xadm\t\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05G\xad\xad\xad\xad\x98\x1a\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03-\xa4\xad\xad\xad\xa2H\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05,\x9b\xad\xad\xad\xadA\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03S\xac\xad\xad\xad\x9b\x1c\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0e\x86\xad\xad\xad\xadc\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x82\xad\xad\xad\xad\x88\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06l\xad\xad\xad\xad\x8b\x18\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0c\xa5\xad\xad\xad\xadh\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06A\xa0\xad\xad\xad\xaaC\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03@\xad\xad\xad\xad\xa1F\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x1c\x92\xad\xad\xad\xadj\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x07g\xad\xad\xad\xad\x8e$\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05x\xad\xad\xad\xad\x95\x17\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\"\x88\xad\xad\xad\xads\x0e\x06\x06\x06\x06\x06\x06\x06\x06\x00^\xad\xad\xad\xad\xad6\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03K\xa0\xad\xad\xad\xadM\x06\x06\x06\x06\x06\x06\x06\x059\xa1\xad\xad\xad\xadd\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05r\xad\xad\xad\xad\xab*\x03\x06\x06\x06\x06\x06\x18\x92\xad\xad\xad\xad\x8c\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x04\x13\x96\xad\xad\xad\xad\x8e\x13\x04\x06\x06\x06\x0bj\xad\xad\xad\xad\x9b0\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x034\xad\xad\xad\xad\xadw\x05\x06\x06\x06J\xab\xad\xad\xad\xad^\x07\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06Z\xad\xad\xad\xad\xaaW\x05\x06\x18\xa0\xad\xad\xad\xad\x89\x10\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x12\x85\xad\xad\xad\xad\xa40\x03\x88\xad\xad\xad\xad\xa0<\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06<\x9e\xad\xad\xad\xadvj\xad\xad\xad\xad\xada\x00\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06f\xac\xad\xad\xad\xad\xad\xad\xad\xad\xad\x84\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0e\x88\xad\xad\xad\xad\xad\xad\xad\xad\xa8 \x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02J\xad\xad\xad\xad\xad\xad\xad\xad]\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x07\x13:~\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\x8dN\x15\n\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03\x07,U\x8a\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\x9cb:\x0e\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05\x03Dq\x96\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\x9bzU\x1b\x00\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\x08V\x90\x9f\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xaa\x96i\x1c\x02\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x15b\x9e\xad\xad\xad\xad\xad\xad\xad\xad\xad\xadxl\xad\xad\xad\xad\x8e`\x9f\xad\xad\xad\xad\xad\xad\xad\xad\xad\xadx/\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x131o\xad\xad\xad\xad\xad\xad\xad\xad\xab\xa7\x87Y\r\x02A\xad\xad\xad\xad\x81\x00\x03I}\xa6\xa1\xad\xad\xad\xad\xad\xad\xad\xad\x86E\x1e\x08\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x04\x05$T\x7f\xad\xad\xad\xad\xad\xad\xad\xad\x9b\x83`3\x02\x02\x06\x06=\xad\xad\xad\xad|\x00\x06\x05\x00\x1fXx\xa4\xad\xad\xad\xad\xad\xad\xad\xad\x93_8\t\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03+o\x94\xad\xad\xad\xad\xad\xad\xad\xad\x86[:\x12\x05\x03\x06\x06\x06\x062\xad\xad\xad\xadx\x02\x06\x06\x06\x04\x05\x0b/Sx\xa1\xad\xad\xad\xad\xad\xad\xad\xa6{@\x08\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x057\xad\xad\xad\xad\xad\xad\xad\xa7l*\x16\x08\x06\x06\x06\x06\x06\x06\x06\x06/\xad\xad\xad\xadt\x00\x06\x06\x06\x06\x06\x06\x06\x06\x10\"W\x91\xad\xad\xad\xad\xad\xad\xadQ\x07\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x02\xa6\xad\xad\xac\xab\x7fB\x06\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06.\xad\xad\xad\xacp\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x04(o\x9e\xab\xad\xad\x9b1\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05^\x9f\x89Z\x15\x00\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06+\xad\xad\xad\xacn\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x04\x02\x08L~\x99v\x13\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x19>\x03\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06*\xad\xad\xad\xach\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x05\x02).\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06-\xa1\xad\xad\xabd\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x04\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06'\xa9\xad\xad\xab_\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06&\x9d\xad\xad\xabZ\x02\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06 \x9a\xad\xad\xa3W\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06#\x97\xad\xad\xa3R\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06!\x96\xad\xad\xa3N\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x1f\x8e\xad\xad\xa2J\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x1d\x90\xad\xad\xa2D\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x1c\x87\xad\xad\xa2?\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x18\x86\xad\xad\xa1:\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x14\x84\xad\xad\xa10\x05\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x17~\xad\xad\xa1+\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x15{\xad\xad\xa1%\x03\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x12y\xad\xad\xac\x1d\x04\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x0e\\\x83\x80z\x12\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x07\x0e\x12\x12\x11\x07\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            )
    return "./icon/aoc_icon.ico"


def on_closing() -> None:
    global language
    if not os.path.isdir("./config"):
        os.mkdir("./config")
    with open("./config/settings.json", "w") as f:
        f.write(
            json.dumps(
                {
                    "language": language,
                    "last_window_pos": [root.winfo_x(), root.winfo_y()],
                },
                indent=4,
            )
        )
    root.destroy()


def set_language(lang: Literal["en", "zh"]) -> None:
    global language
    language = lang
    messagebox.showinfo(
        LANG("Success"), LANG("Language changed.\nEffective at next startup.")
    )


# constants
VERSION = "1.1.0"
AUTHOR = "Withered Flower"
EMAIL = "2734850178@qq.com"

## global variables
cur_path = ""
language = ""

## entrance
if __name__ == "__main__":
    # create config folder and files if not exist
    if not os.path.isdir("./config"):
        os.mkdir("./config")
    if not os.path.isfile("./config/path.data"):
        with open("./config/path.data", "w") as f:
            pass
    if not os.path.isfile("./config/cookies.json"):
        with open("./config/cookies.json", "w") as f:
            pass

    # load settings
    try:
        with open("./config/settings.json", "r") as f:
            settings = json.load(f)
    except:  # noqa: E722
        settings = {"language": "en", "last_window_pos": None}
        with open("./config/settings.json", "w") as f:
            f.write(json.dumps(settings, indent=4))
    language = settings["language"]
    last_window_pos = settings["last_window_pos"]

    # create main window
    root = tk.Tk()
    root.title(LANG("AoC Helper"))
    if (
        last_window_pos is None
        or type(last_window_pos) is not list
        or len(last_window_pos) != 2
    ):
        last_window_pos = [
            int(root.winfo_screenwidth() / 2 - 150),
            int(root.winfo_screenheight() / 2 - 200),
        ]
    root.geometry(f"300x320+{last_window_pos[0]}+{last_window_pos[1]}")
    root.resizable(False, False)
    root.iconbitmap(get_icon())
    root.protocol("WM_DELETE_WINDOW", on_closing)
    windnd.hook_dropfiles(root, set_path)

    # create menu
    menu_bar = Menu(root)
    root.config(menu=menu_bar)

    # create settings menu
    settings_menu = Menu(menu_bar, tearoff=0)
    settings_menu.add_command(label=LANG("Set Path"), command=set_path)
    settings_menu.add_command(
        label=LANG("Set Cookies"),
        command=lambda: os.startfile(
            os.path.join(os.getcwd(), "./config/cookies.json")
        ),
    )
    menu_bar.add_cascade(label=LANG("Settings"), menu=settings_menu)

    # create tools menu
    tools_menu = Menu(menu_bar, tearoff=0)
    tools_menu.add_command(label=LANG("Create New AoC"), command=create_new_aoc)
    menu_bar.add_cascade(label=LANG("Tools"), menu=tools_menu)

    # create language menu
    lang_menu = Menu(menu_bar, tearoff=0)
    lang_menu.add_command(
        label=LANG("English"),
        command=lambda: set_language("en"),
    )
    lang_menu.add_command(
        label=LANG("Chinese"),
        command=lambda: set_language("zh"),
    )
    menu_bar.add_cascade(label=LANG("Language"), menu=lang_menu)

    # create help menu
    help_menu = Menu(menu_bar, tearoff=0)
    help_menu.add_command(
        label=LANG("About"),
        command=lambda: messagebox.showinfo(
            LANG("About"),
            f"{LANG("Version")}: {VERSION}\n{LANG("Author")}: {AUTHOR}\n{LANG("Email")}: {EMAIL}",
        ),
    )
    menu_bar.add_cascade(label=LANG("Help"), menu=help_menu)

    # create curernt path lable
    cur_path_lable = tk.Label(root)
    cur_path_lable.pack(pady=20)

    # create buttons
    create_new_day_btn = tk.Button(
        root, text=LANG("Create New Day"), command=create_new_day, width=20
    )
    create_new_day_btn.pack(pady=10)

    create_newest_p1_btn = tk.Button(
        root,
        text=LANG("Open Newest Part 1"),
        command=lambda: open_newest(1),
        width=20,
    )
    create_newest_p1_btn.pack(pady=10)

    create_part2_btn = tk.Button(
        root, text=LANG("Create Part 2"), command=create_part2, width=20
    )
    create_part2_btn.pack(pady=10)

    create_newest_p2_btn = tk.Button(
        root,
        text=LANG("Open Newest Part 2"),
        command=lambda: open_newest(2),
        width=20,
    )
    create_newest_p2_btn.pack(pady=10)

    # create version lable
    ver_lable = tk.Label(root, text=f"Ver. {VERSION}")
    ver_lable.pack(pady=10)

    # load path
    load_path()

    # run main loop
    root.mainloop()
